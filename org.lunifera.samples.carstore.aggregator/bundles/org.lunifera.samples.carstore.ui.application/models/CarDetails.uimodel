package org.lunifera.samples.carstore.views.general

ideview CarDetails {
	sharedStateGroup "org.lunifera.samples.carstore.general"
	 
	exposedActions {
		reloadEntity id org.lunifera.actions.load
		deleteEntity id org.lunifera.actions.delete
		saveEntity id org.lunifera.actions.save
		validateEntity id org.lunifera.actions.validate
		newCar id "org.lunifera.actions.new.car" checkDirty
		newPickup id "org.lunifera.actions.new.pickup" checkDirty
		newConvertible id "org.lunifera.actions.new.convertible" checkDirty
	}
	category org.lunifera.vaaclipse.addons.application.partstack.main
 
	datasource main:org.lunifera.samples.carstore.dtos.general.CarDto
	eventTopic "org/lunifera/samples/carstore/CarDto/selection"
	datasource pickup:org.lunifera.samples.carstore.dtos.general.PickupDto
	datasource convertible:org.lunifera.samples.carstore.dtos.general.ConvertibleDto

	verticalLayout mainView {
		horizontalLayout {
			form Detail_left {
				textfield number {
					MinLengthValidator(3)
					MaxLengthValidator(10)
				}
				numericField axes
				decimalField (i18n "org.lunifera.samples.carstore.dtos.general.CarDto.weight") weightAmount
				decimalField (i18n "org.lunifera.samples.carstore.dtos.general.CarDto.price") priceAmount
  
				bind main.number <--> [this.number].value
				bind main.axes <--> [this.axes].value
				bind main.weight.amount <--> [this.weightAmount].value
				bind main.price.amount <--> [this.priceAmount].value
			}
			align top-left form Detail_right {
				textfield description {
					MinLengthValidator(3)
					MaxLengthValidator(125)
				}
				checkbox(readonly) dirty
				referenceField weightUom {
					type org.lunifera.samples.carstore.dtos.general.UnitOfMeasureDto
					captionField description 
					refSource org.lunifera.samples.carstore.dtos.general.WeightDto:uom
				}
				referenceField priceCurrency {
					type org.lunifera.samples.carstore.dtos.general.CurrencyDto
					captionField iso3Code 
					refSource org.lunifera.samples.carstore.dtos.general.PriceDto:currency
				}

				bind main.description <--> [this.description].value
				bind main.dirty --> [this.dirty].value
				bind main.weight.uom <--> [this.weightUom].value
				bind main.price.currency <--> [this.priceCurrency].value
			}
		}
		align top-left
  
		/**
		 * Convertible
		 */
		horizontalLayout ConvertibleForm {
			form ConvertibleForm_left {
				optionsgroup roofType {
					type org.lunifera.samples.carstore.dtos.general.RoofType
				}
				
				bind convertible.roofType <--> [this.roofType].selection
			} align top-left 
			
			form ConvertibleForm_right {
				textfield color
				
				bind convertible.color <--> [this.color].value
			}
		} align top-left
 
		/**
		 * Pickup
		 */
		horizontalLayout PickupForm {
			form PickupForm_left {
				decimalField  (i18n "org.lunifera.samples.carstore.dtos.general.PickupDto.loadingAreaWidth") loadingAreaWidthAmount
				decimalField  (i18n "org.lunifera.samples.carstore.dtos.general.PickupDto.loadingAreaLength") loadingAreaLengthAmount

				bind pickup.loadingAreaWidth.amount <--> [this.loadingAreaWidthAmount].value
				bind pickup.loadingAreaLength.amount <--> [this.loadingAreaLengthAmount].value
			}
			align top-left 
			
			form PickupForm_right {
				referenceField loadingAreaWidthUom {
					type org.lunifera.samples.carstore.dtos.general.UnitOfMeasureDto
					captionField description 
					refSource org.lunifera.samples.carstore.dtos.general.LengthDto:uom
				}
				referenceField loadingAreaLengthUom {
					type org.lunifera.samples.carstore.dtos.general.UnitOfMeasureDto
					captionField description 
					refSource org.lunifera.samples.carstore.dtos.general.LengthDto:uom
				}
				
				bind pickup.loadingAreaWidth.uom <--> [this.loadingAreaWidthUom].value
				bind pickup.loadingAreaLength.uom <--> [this.loadingAreaLengthUom].value
			}
		} align top-left
 
		table configDetails {
			type org.lunifera.samples.carstore.dtos.general.ConfigDetailDefinitionDto
    
			columns { 
				column number 
				column description
				column price.amount
				column price.currency.iso3Code
			}
			bind main.configDetails <--> [this].collection
		} align top-left
	} align top-left
    
	visibility CarActions {
		fireOn main as main
		fireOn main.dirty as dirty 
		fireOn main.axes as axes 
		ui [this.reloadEntity] as reloadAction 
		ui [this.deleteEntity] as deleteAction 
		ui [this.saveEntity] as saveAction 
		ui [this.validateEntity] as validateAction 
		ui [this.mainView] as mainLayout 

		{
			mainLayout.enabled = true 
			reloadAction.enabled = false 
			deleteAction.enabled = false 
			saveAction.enabled = false
			validateAction.enabled = false 
			if(main != null) {
				if(dirty) {
					reloadAction.enabled = true 
					saveAction.enabled = true
				}
				deleteAction.enabled = true 
				validateAction.enabled = true
			} else {
				mainLayout.enabled = false
			}
		}
	}
 
	visibility CarSpecifics {
		fireOn main as main
		ui [CarDetails.mainView.PickupForm] as pickupForm
		ui [CarDetails.mainView.ConvertibleForm] as convertibleForm
		
		{ 
			pickupForm.visible = false
			convertibleForm.visible = false
			
			if(main instanceof org.lunifera.samples.carstore.dtos.general.PickupDto){
				pickupForm.visible = true
			}
			if(main instanceof org.lunifera.samples.carstore.dtos.general.ConvertibleDto){
				convertibleForm.visible = true
			}
		}
	}
 
	// bind datasources for subclasses
	bind main --> convertible
	bind main --> pickup

	bind [this.saveEntity].onExecuted --> sendEvent("org/lunifera/samples/carstore/CarDto/table/refresh")
	bind [this.deleteEntity].onExecuted --> sendEvent("org/lunifera/samples/carstore/CarDto/table/refresh")
	bind [this.deleteEntity].onExecuted --> [this.newCar].click
	bind [this.reloadEntity].onExecuted --> sendEvent("org/lunifera/samples/carstore/CarDto/table/refresh")

	// new cars

	bind [this.newCar].onExecuted --> newInstance for org.lunifera.samples.carstore.dtos.general.CarDto at main
	bind [this.newPickup].onExecuted --> newInstance for org.lunifera.samples.carstore.dtos.general.PickupDto at main
	bind [this.newConvertible].onExecuted --> newInstance for org.lunifera.samples.carstore.dtos.general.ConvertibleDto at
	main
}
